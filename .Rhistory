# Name to codes of the same year
regioncode(data_input = corruption$prefecture,
convert_to = "code",
year_from = 2019,
year_to = 2019)
# Name to name of a different year
regioncode(data_input = corruption$prefecture,
convert_to = "name",
year_from = 2019,
year_to = 1989)
# Original full names
corruption$prefecture
fake_incomplete <- corruption$prefecture
index_incomplete <- sample(seq(length(corruption$prefecture)), 7)
fake_incomplete[index_incomplete] <- fake_incomplete[index_incomplete] |>
substr(start = 1, stop = 2)
fake_incomplete
# Conversion to full names in 2008
regioncode(data_input = fake_incomplete,
convert_to = "name",
year_from = 2019,
year_to = 2008,
incomplete_name = TRUE)
names_municipality <- c("北京市", # Beijing, a municipality
"海淀区", # A district of Beijing
"上海市", # Shanghai, a municipality
"静安区", # A district of Shanghai
"济南市") # A prefecture of Shandong
# When `zhixiashi` is FALSE, only the districts are recognized
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = FALSE)
# When `zhixiashi` is TRUE, municipalities are recognized
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = TRUE)
tibble(
city = corruption$prefecture,
rank1989 = regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
convert_to="rank"),
rank2014 = regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 2014,
convert_to = "rank")
)
tibble(
city = corruption$prefecture,
cityPY = regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
convert_to = "name",
to_pinyin = TRUE
),
areaPY = regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
convert_to = "area",
to_pinyin = TRUE
)
)
# Regions with special spelling
regioncode(data_input = c("山西", "陕西", "内蒙古", "香港", "澳门"),
year_from = 2019,
year_to = 2008,
convert_to = "name",
incomplete_name = TRUE,
province = TRUE,
to_pinyin = TRUE
)
tibble(
province = corruption$province_id,
prov_name = regioncode(data_input = corruption$province_id,
convert_to = "name",
year_from = 2019,
year_to = 1989,
province = TRUE),
prov_abbre = regioncode(data_input = corruption$province_id,
convert_to = "codeToabbre",
year_from = 2019,
year_to = 1989,
province = TRUE)
)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
convert_to = "area")
tibble(
city = corruption$prefecture,
dialectGroup = regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
to_dialect = "dia_group"),
dialectSubGroup = regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
to_dialect = "dia_sub_group")
)
pkgbuild::check_build_tools(debug = TRUE)
library(devtools)
detach("package:devtools", unload = TRUE)
install.packages("devtools")
pkgbuild::check_build_tools(debug = TRUE)
new<- import("~/Desktop/全国各市城镇人口构成.xlsx")
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
if (!requireNamespace("pacman", quietly = TRUE)) {
install.packages("pacman")
}
library(pacman)
p_load("rio",
"tidyverse")
new<- import("~/Desktop/全国各市城镇人口构成.xlsx")
View(new)
str(new)
new <- new %>%
mutate(population= as.numeric(population))
View(new)
new<- import("~/Desktop/全国各市城镇人口构成.xlsx")
new <- new %>%
mutate(population= as.numeric(population))
View(new)
new<- import("~/Desktop/全国各市城镇人口构成.xlsx")
View(new)
new <- new %>%
mutate(population= as.numeric(population))
new<- import("~/Desktop/全国各市城镇人口构成.xlsx")
new <- new %>%
mutate(population= as.numeric(population))
View(new)
new <- new %>%
mutate(population = as.numeric(population)) %>%
arrange(code, year)
View(new)
generate_cityranking <- function(df) {
year <- unique(df$year)
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year %in% 2014:2019) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- select(df, -year, -population,-population_original)
df
}
new_cityranking <- function(df, year) {
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year %in% 2014:2019) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- df %>% select(-year, -population)
return(df)
}
new_cityranking <- function(df, year) {
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year %in% 2014:2019) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- df %>% select(-year, -population)
return(df)
}
dfs <- map(1986:2019, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
View(dfs)
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
View(dfs)
View(dfs[[2]])
new_cityranking <- function(df, year) {
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year %in% 2014:2019) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- df %>% select(-year, -population)
return(df)
}
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
View(dfs)
str(new)
new_cityranking <- function(df, year) {
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year > 2013) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- df %>% select(-year, -population)
return(df)
}
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
View(dfs)
new_cityranking<- reduce(dfs, full_join, by = c("code"))
View(new_cityranking)
new_cityranking <- new_cityranking %>%
select(-contains("地市级"))
View(new_cityranking)
new_cityranking <- new_cityranking %>%
select(-contains("地级"))
View(new_cityranking)
library(readxl)
region_data <- read_excel("region_data.xlsx")
View(region_data)
View(new_cityranking)
region_data <- region_data %>%
mutate(join_key = case_when(
zhixiashi == TRUE ~ prov_code,
zhixiashi != TRUE ~ `2022_code`
))
View(region_data)
region_data  <- region_data %>%
left_join(new_cityranking, by = c("join_key" = "code")) %>%
select(-"join_key")
View(new)
View(new_cityranking)
View(new_cityranking)
any(duplicated(new_cityranking$code))
duplicated_codes <- new_cityranking$code[duplicated(new_cityranking$code)]
unique(duplicated_codes)
new<- import("~/Desktop/全国各市城镇人口构成.xlsx")
new <- new %>%
mutate(population = as.numeric(population)) %>%
arrange(code, year)
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
new_cityranking <- function(df, year) {
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year > 2013) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- df %>% select(-year, -population)
return(df)
}
new_cityranking <- function(df, year) {
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year > 2013) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- df %>% select(-year, -population)
return(df)
}
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
new_cityranking<- reduce(dfs, full_join, by = c("code"))
new_cityranking <- new_cityranking %>%
select(-contains("地级"))
region_data <- region_data %>%
mutate(join_key = case_when(
zhixiashi == TRUE ~ prov_code,
zhixiashi != TRUE ~ `2022_code`
))
region_data  <- region_data %>%
left_join(new_cityranking, by = c("join_key" = "code")) %>%
select(-"join_key")
View(new_cityranking)
new<- import("~/Desktop/全国各市城镇人口构成.xlsx")
new <- new %>%
mutate(population = as.numeric(population)) %>%
arrange(code, year)
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
new_cityranking <- function(df, year) {
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year > 2013) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- df %>% select(-year, -population)
return(df)
}
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
View(dfs)
View(dfs)
new_cityranking<- reduce(dfs, full_join, by = c("code"))
View(new_cityranking)
new_cityranking <- new_cityranking %>%
select(name,year,contains("cityrank"))
View(dfs)
View(region_data)
View(new_cityranking)
new_cityranking <- new_cityranking %>%
select(name,code,contains("cityrank"))
View(new_cityranking)
new<- import("~/Desktop/全国各市城镇人口构成.xlsx")
new <- new %>%
mutate(population = as.numeric(population)) %>%
arrange(code, year)
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
new_cityranking <- function(df, year) {
year_cityranking <- paste0(year, "_cityranking")
if (year %in% 1986:2013) {
df[[year_cityranking]] <- case_when(
df$population > 100 ~ "特大城市",
df$population > 50 & df$population <= 100 ~ "大城市",
df$population > 20 & df$population <= 50 ~ "中等城市",
df$population <= 20 ~ "小城市",
TRUE ~ NA_character_
)
} else if (year > 2013) {
df[[year_cityranking]] <- case_when(
df$population > 1000 ~ "超大城市",
df$population > 500 & df$population <= 1000 ~ "特大城市",
df$population > 300 & df$population <= 500 ~ "I型大城市",
df$population > 100 & df$population <= 300 ~ "II型大城市",
df$population > 50 & df$population <= 100 ~ "中等城市",
df$population > 20 & df$population <= 50 ~ "I型小城市",
df$population <= 20 ~ "II型小城市",
TRUE ~ NA_character_
)
}
df <- df %>% select(-year, -population)
return(df)
}
dfs <- map(2020:2022, ~new %>%
filter(year == .x) %>%
new_cityranking(., .x))
new_cityranking<- reduce(dfs, full_join, by = c("code"))
new_cityranking <- new_cityranking %>%
select(name,code,contains("cityrank"))
region_data <- region_data %>%
mutate(join_key = case_when(
zhixiashi == TRUE ~ prov_code,
zhixiashi != TRUE ~ `2022_code`
))
region_data  <- region_data %>%
left_join(new_cityranking, by = c("join_key" = "code")) %>%
select(-"join_key")
View(region_data)
saveRDS(region_data, file = "region_data.rds")
library(readxl)
cityranking <- read_excel("inst/extdata/cityranking.xls")
View(cityranking)
library(readxl)
云南人口构成 <- read_excel("inst/extdata/云南人口构成.xlsx")
View(云南人口构成)
rm(list=ls())
load("~/Documents/GitHub/regioncode/R/sysdata.rda")
if (!requireNamespace("dplyr", quietly = TRUE)) {
install.packages("dplyr")
}
library(dplyr)
if (!requireNamespace("pacman", quietly = TRUE)) {
install.packages("pacman")
}
library(pacman)
p_load("rio",
"tidyverse")
region_data<- import("region_data.rds")
View(corruption)
save(region_data, corruption, file = "R/sysdata.rda")
View(region_data)
load("~/Documents/GitHub/regioncode/R/sysdata.rda")
View(region_data)
library(writexl)
write_xlsx(region_data, "region_data.xlsx")
load("~/Documents/GitHub/regioncode/R/sysdata.rda")
View(region_data)
library(readxl)
region_data <- read_excel("region_data.xlsx")
View(region_data)
View(corruption)
save(region_data, corruption, file = "~/Documents/GitHub/regioncode/R/sysdata.rda")
