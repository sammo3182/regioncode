# 1999 version
regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989)
library(regioncode)
data("corruption")
# Original 2019 version
corruption$prefecture_id
# 1999 version
regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989)
# Codes to name
regioncode(data_input = corruption$prefecture_id,
convert_to = "name",
year_from = 2019,
year_to = 1989)
# Name to codes of the same year
regioncode(data_input = corruption$prefecture,
convert_to = "name",
year_from = 2019,
year_to = 2019)
# Name to name of a different year
regioncode(data_input = corruption$prefecture,
convert_to = "name",
year_from = 2019,
year_to = 1989)
corruption$prefecture
# The original name
corruption$prefecture
# Codes to name
regioncode(data_input = corruption$prefecture_id,
convert_to = "name",
year_from = 2019,
year_to = 1989)
# Name to codes of the same year
regioncode(data_input = corruption$prefecture,
convert_to = "code",
year_from = 2019,
year_to = 2019)
# Name to name of a different year
regioncode(data_input = corruption$prefecture,
convert_to = "name",
year_from = 2019,
year_to = 1989)
library(regioncode)
library(regioncode)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
# Full, official names
corruption$prefecture
regioncode(data_input = corruption$prefecture,
convert_to = "name",
year_from = 2019,
year_to = 1989,
incomplete_name = "to")
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
convert_to="area")
library(regioncode)
library(regioncode)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
to_dialect = "dia_group")
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
to_dialect = "sub_dia_group")
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
to_dialect = "dia_sub_group")
library(devtools)
build_vignettes()
build_vignettes()
library(regioncode)
library(devtools)
build_vignettes()
library(regioncode)
vignette(regioncode)
build()
?build_vignettes
browseVignettes()
browseVignettes("regioncode")
devtools::build_vignettes()
library(regioncode)
?build_vignettes()
build_vignettes()
library(regioncode)
build_vignettes(clean = FALSE)
library(regioncode)
library(regioncode)
library(devtools)
release()
spell_check()
library(regioncode)
release()
?release
release(args = "clean_doc = FALSE")
release()
library(regioncode)
library(regioncode)
load("R/sysdata.rda")
library(regioncode)
library(regioncode)
regioncode::regioncode("宁夏回族自治区",
+                        year_from = 2015,
regioncode::regioncode(
"宁夏回族自治区",
year_from = 2015,
year_to = 2015,
convert_to = "name",
incomplete_name = "to",
province = TRUE
)
library(here)
region_table$prov_name[region_table$prov_sname == "宁夏"]
load("D:/Seafile/WW_research/01_Research/R_package/regioncode/R/sysdata.rda")
region_table$prov_name[region_table$prov_sname == "宁夏"]
region_table$prov_name[region_table$prov_sname == "宁夏"] <- "宁夏回族自治区"
save(region_table, corruption, file = here("R", "sysdata.rda"))
library(regioncode)
regioncode::regioncode(
"宁夏回族自治区",
year_from = 2015,
year_to = 2015,
convert_to = "name",
incomplete_name = "to",
province = TRUE
)
library(regioncode)
library(regioncode)
library(regioncode)
load("D:/Seafile/WW_research/01_Research/R_package/regioncode/R/sysdata.rda")
View(region_table)
names(region_data)
names(region_table)
load("D:/Seafile/WW_research/01_Research/R_package/regioncode/R/sysdata.rda")
library(regioncode)
load("D:/Seafile/WW_research/01_Research/R_package/regioncode/R/sysdata.rda")
names(region_data)
save(corruption, region_data, file = here::here("R", "sysdata.rda"))
load("D:/Seafile/WW_research/01_Research/R_package/regioncode/R/sysdata.rda")
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
if(!require(regioncode)) install.packages("regioncode")
library(regioncode)
data("corruption")
# Original 2019 version
corruption$prefecture_id
# 1999 version
regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989)
# The original name
corruption$prefecture
# Codes to name
regioncode(data_input = corruption$prefecture_id,
convert_to = "name",
year_from = 2019,
year_to = 1989)
# Name to codes of the same year
regioncode(data_input = corruption$prefecture,
convert_to = "code",
year_from = 2019,
year_to = 2019)
# Name to name of a different year
regioncode(data_input = corruption$prefecture,
convert_to = "name",
year_from = 2019,
year_to = 1989)
tibble(
preference = corruption$prefecture,
rank = regioncode(data_input = corruption$prefecture,
year_from = 2011,
year_to = 1989,
convert_to="rank")
)
tidyr::tibble(
preference = corruption$prefecture,
rank = regioncode(data_input = corruption$prefecture,
year_from = 2011,
year_to = 1989,
convert_to="rank")
)
load("D:/Seafile/WW_research/01_Research/R_package/regioncode/R/sysdata.rda")
region_data |> names()
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
if(!require(regioncode)) install.packages("regioncode")
tibble(
code2019 = corruption$prefecture_id,
code1989 = regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989),
name1989 = regioncode(data_input = corruption$prefecture_id,
convert_to = "name", # default set
year_from = 2019,
year_to = 1989)
)
library(tidyverse)
tibble(
code2019 = corruption$prefecture_id,
code1989 = regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989),
name1989 = regioncode(data_input = corruption$prefecture_id,
convert_to = "name", # default set
year_from = 2019,
year_to = 1989)
)
temp2 <- corruption$prefecture_id
# 1989 version
temp <- regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989)
View(region_data)
usethis::git_vaccinate() #Adds .DS_Store, .Rproj.user, .Rdata, .Rhistory, and .httr-oauth to your global (a.k.a. user-level) .gitignore. This is good practice as it decreases the chance that you will accidentally leak credentials to GitHub.
library(regioncode)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
if(!require(regioncode)) install.packages("regioncode")
library(regioncode)
library(tidyverse)
library(regioncode)
data("corruption")
# Original 2019 version
corruption$prefecture_id
# 1989 version
temp <- regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989)
# tibble(
#   code2019 = corruption$prefecture_id,
#   code1989 = regioncode(data_input = corruption$prefecture_id,
#            convert_to = "code", # default set
#            year_from = 2019,
#            year_to = 1989),
#   name1989 = regioncode(data_input = corruption$prefecture_id,
#            convert_to = "name", # default set
#            year_from = 2019,
#            year_to = 1989)
# )
load("D:/Seafile/WW_research/01_Research/R_package/regioncode/R/sysdata.rda")
# Original 2019 version
corruption$prefecture_id
# 1989 version
temp <- regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989)
tibble(
code2019 = corruption$prefecture_id,
code1989 = regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989),
name1989 = regioncode(data_input = corruption$prefecture_id,
convert_to = "name", # default set
year_from = 2019,
year_to = 1989)
)
tibble(
code2019 = corruption$prefecture_id,
code1989 = regioncode(data_input = corruption$prefecture_id,
convert_to = "code", # default set
year_from = 2019,
year_to = 1989),
name2019 = regioncode(data_input = corruption$prefecture_id,
convert_to = "name", # default set
year_from = 2019,
year_to = 2019),
name1989 = regioncode(data_input = corruption$prefecture_id,
convert_to = "name", # default set
year_from = 2019,
year_to = 1989)
)
?regioncode
# Original full names
corruption$prefecture
# Convert to incomplete names in 1989
fake_incomplete <- regioncode(data_input = corruption$prefecture,
convert_to = "name",
year_from = 2019,
year_to = 1989,
incomplete_name = "to")
fake_incomplete
# Convert to full names in 2008
fake_full <- regioncode(data_input = fake_incomplete,
convert_to = "name",
year_from = 1989,
year_to = 2008,
incomplete_name = "to")
fake_full
names_municipality <- c("北京", "天津", "上海", "重庆")
names_municipality <- c("北京", "天津", "上海", "重庆")
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = FALSE)
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = TRUE)
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = TRUE)
names_municipality <- c("北京", "海淀区", "上海", "静安区")
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = FALSE)
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = TRUE)
library(reprex)
names_municipality <- c("北京", # Beijing, a municipality
"海淀区", # A district of Beijing
"上海", # Shanghai, a municipality
"静安区", # A district of Shanghai
"济南市") # A prefecture of Shandong
# When `zhixiashi` is FALSE, only the districts are recognized
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = FALSE)
# When `zhixiashi` is TRUE, muncipalities are
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = TRUE)
reprex(
{
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = FALSE)
# When `zhixiashi` is TRUE, muncipalities are
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = TRUE)
}
)
reprex(
{
names_municipality <- c("北京", # Beijing, a municipality
"海淀区", # A district of Beijing
"上海", # Shanghai, a municipality
"静安区", # A district of Shanghai
"济南市") # A prefecture of Shandong
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = FALSE)
# When `zhixiashi` is TRUE, muncipalities are
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = TRUE)
}
)
names_municipality <- c("北京", # Beijing, a municipality
"海淀区", # A district of Beijing
"上海", # Shanghai, a municipality
"静安区", # A district of Shanghai
"济南市") # A prefecture of Shandong
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = FALSE)
reprex(
{
library(regioncode)
names_municipality <- c("北京", # Beijing, a municipality
"海淀区", # A district of Beijing
"上海", # Shanghai, a municipality
"静安区", # A district of Shanghai
"济南市") # A prefecture of Shandong
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = FALSE)
# When `zhixiashi` is TRUE, muncipalities are
regioncode(data_input = names_municipality,
year_from = 2019,
year_to = 2019,
convert_to = "code",
zhixiashi = TRUE)
}
)
?reprex
tibble(
province = corruption$province_id,
prov_name = regioncode(data_input = corruption$province_id,
convert_to = "name",
year_from = 2019,
year_to = 1989,
province = TRUE),
prov_abbre = regioncode(data_input = corruption$province_id,
convert_to = "codeToabbre",
year_from = 2019,
year_to = 1989,
province = TRUE)
)
source("~/.active-rstudio-document", echo=TRUE)
tibble(
province = corruption$province_id,
prov_name = regioncode(data_input = corruption$province_id,
convert_to = "name",
year_from = 2019,
year_to = 2019,
province = TRUE),
prov_abbre = regioncode(data_input = corruption$province_id,
convert_to = "codeToabbre",
year_from = 2019,
year_to = 1989,
province = TRUE)
)
reprex(
{
library(regioncode)
regioncode(data_input = corruption$province_id,
convert_to = "name",
year_from = 2019,
year_to = 1989,
province = TRUE)
}
)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
convert_to = "name",
to_pinyin = TRUE
)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
convert_to = "name",
incomplete_name = "to",
to_pinyin = TRUE
)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1989,
convert_to = "area",
to_pinyin = TRUE
)
regioncode(data_input = c("山西", "陕西", "内蒙古", "香港"),
year_from = 2019,
year_to = 2008,
convert_to = "name",
incomplete_name = "from",
to_pinyin = TRUE
)
regioncode(data_input = c("山西省", "陕西省", "内蒙古自治区"),
year_from = 2019,
year_to = 2008,
convert_to = "name",
to_pinyin = TRUE
)
reprex(
{
library(regioncode)
regioncode(data_input = c("山西", "陕西", "内蒙古", "香港"),
year_from = 2019,
year_to = 2008,
convert_to = "name",
incomplete_name = "from",
to_pinyin = TRUE
)
}
)
# Regions with special spelling
regioncode(data_input = c("山西", "陕西", "内蒙古", "香港", "澳门"),
year_from = 2019,
year_to = 2008,
convert_to = "name",
incomplete_name = "from",
province = TRUE,
to_pinyin = TRUE
)
# Regions with special spelling
regioncode(data_input = c("山西", "陕西", "内蒙古", "香港", "澳门"),
year_from = 2019,
year_to = 2008,
convert_to = "name",
incomplete_name = "both",
province = TRUE,
to_pinyin = TRUE
)
