}
#爬取每年的网站链接#
year_link <- vector("list", 3)
for(i in 1:3)
{
year_link_m[[i]] <- html_nodes(web[[i]], "div.alist a") %>% html_attr("href")
i = i+1
}
head(year_link_m)
for(i in 1:3)
{
year_link[[i]] <- paste0("http://www.mca.gov.cn", year_link_m[[i]])
i = i+1
}
install.packages("XML")
#爬取主页面#
web <- vector("list", 3)
web_base <- "http://www.mca.gov.cn/article/sj/xzqh/1980/?"
web[[1]] <- read_html(web_base)
for(i in 1:2)
{
web_m <- paste0(web_base,i+1)
web[[i+1]] <- read_html(web_m)
i = i+1
}
#爬取每年的网站链接#
year_link <- vector("list", 3)
for(i in 1:3)
{
year_link_m[[i]] <- html_nodes(web[[i]], "div.alist a") %>% html_attr("href")
i = i+1
}
head(year_link_m)
for(i in 1:3)
{
year_link[[i]] <- paste0("http://www.mca.gov.cn", year_link_m[[i]])
i = i+1
}
#爬取每年的网站链接#
year_link <- vector("list", 3)
year_link_m <- vector("list", 3)
for(i in 1:3)
{
year_link_m[[i]] <- html_nodes(web[[i]], "div.alist a") %>% html_attr("href")
i = i+1
}
head(year_link_m)
for(i in 1:3)
{
year_link[[i]] <- paste0("http://www.mca.gov.cn", year_link_m[[i]])
i = i+1
}
View(year_link_m)
head(year_link)
2019 - 1986
load("./R/data/region_data_all.rda")
class("good")
?switch
library(dplyr)
?case_when
library(regioncode)
4000
library(dplyr)
region_table <- readRDS("../data/region_data_all.rds")
region_table <- readRDS("data/region_data_all.rds")
name_zhixiashi <- c("北京", "天津", "上海", "重庆")
region_table <- region_table %>%
mutate(zhixiashi = prov_name %in% name_zhixiashi)
saveRDS("data/region_data_all.rds")
saveRDS(region_table, "data/region_data_all.rds")
library(regioncode)
library(regioncode)
save(region_table, "../data/region_data_all.rda")
save(region_table, "data/region_data_all.rda")
saveRDS(region_table, "data/region_data_all.rda")
load("data/region_data_all.rda")
region_table <- readRDS("data/region_data_all.rds")
?save
save(region_table, "data/region_data_all.Rdata")
save(region_table, "data/region_data_all.RData")
save(region_table, "region_data_all.RData")
save(region_table, file = "data/region_data_all.RData")
load("data/region_data_all.RData")
library(regioncode)
library(regioncode)
usethis::use_build_ignore("data_preparation")
library(regioncode)
library(regioncode)
df_toy <- readRDS("data/df_toy.rds")
View(df_toy)
load("D:/Dropbox/Seafile/WW/01_Instruction/Research/R packages/regioncode/dev/corruption_data.rda")
load("corruption_data.rda")
load("dev/corruption_data.rda")
Sys.setlocale(category = "LC_COLLATE", locale = "Chinese")
Sys.setlocale(category = "LC_CTYPE", locale = "Chinese")
load("dev/corruption_data.rda")
library(dplyr)
?sample_n
df_toy <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2)
set.seed(313)
load("dev/corruption_data.rda")
df_toy <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2)
usethis::use_data(df_toy)
load("data/region_data_all.RData")
name_zhixiashi <- c("北京","天津", "上海", "重庆")
region_table <- region_table %>%
mutate(zhixiashi = prov_name %in% name_zhixiashi)
usethis::use_data(region_table)
?usethis::use_data
set.seed(313)
# Toy data for illustration
load("dev/corruption_data.rda")
toy <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2)
usethis::use_data(toy, overwrite = TRUE)
set.seed(313)
# Toy data for illustration
load("dev/corruption_data.rda")
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2)
usethis::use_data(corruption, overwrite = TRUE)
?data
library(regioncode)
data(corruption)
force(corruption)
library(regioncode)
library(regioncode)
load("dev/corruption_data.rda")
set.seed(313)
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2)
View(corruption)
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2) %>%
ungroup() %>%
mutate(prefecture_sname = gsub("市|县|自治.*$", "", prefecture))
set.seed(313)
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2) %>%
ungroup() %>%
mutate(prefecture_sname = gsub("市|县|.*族自治.*$", "", prefecture))
set.seed(313)
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2) %>%
ungroup() %>%
mutate(prefecture_sname = gsub("市|区|县|.*族自治.*$", "", prefecture))
set.seed(313)
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2) %>%
ungroup() %>%
mutate(prefecture_sname = gsub("市|区|县|\\w{1,2}族自治.*$", "", prefecture))
?gsub
gsub("市|区|县|[\\p{Han}{1, 2}]自治.*$", "", "石柱土家族自治县", perl = TRUE)
gsub("市|区|县|[\\p{Han}]族自治.*$", "", "石柱土家族自治县", perl = TRUE)
gsub("市|区|县|\\p{Han}{2}族自治.*$", "", "石柱土家族自治县", perl = TRUE)
set.seed(313)
load("dev/corruption_data.rda")
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2) %>%
ungroup() %>%
mutate(prefecture_sname = gsub("市|区|县|[\\p{Han}]自治.*$", "", prefecture, perl = TRUE))
ls_official <- c("壮族自治.*$|回族自治.*$|满族自治.*$|维吾尔族自治.*$|苗族自治.*$|彝族自治.*$|土家族自治.*$|藏族自治.*$|蒙古族自治.*$|侗族自治.*$|布依族自治.*$|瑶族自治.*$|白族自治.*$|朝鲜族自治.*$|哈尼族自治.*$|黎族自治.*$|哈萨克族自治.*$|傣族自治.*$|畲族自治.*$|傈僳族自治.*$|东乡族自治.*$|仡佬族自治.*$|拉祜族自治.*$|佤族自治.*$|水族自治.*$|纳西族自治.*$| 羌族自治.*$| 土族自治.*$| 仫佬族自治.*$| 锡伯族自治.*$| 柯尔克孜族自治.*$|景颇族自治.*$|达斡尔族自治.*$|撒拉族自治.*$|布朗族自治.*$|毛南族自治.*$|塔吉克族自治.*$|普米族自治.*$|阿昌族自治.*$|怒族自治.*$|鄂温克族自治.*$|京族自治.*$|基诺族自治.*$|德昂族自治.*$|保安族自治.*$|俄罗斯族自治.*$|裕固族自治.*$|乌孜别克族自治.*$|门巴族自治.*$|鄂伦春族自治.*$|独龙族自治.*$|赫哲族自治.*$|高山族自治.*$|珞巴族自治.*$|塔塔尔族自治.*$|市|区|州|县")
name_official <- c("壮族自治.*$|回族自治.*$|满族自治.*$|维吾尔族自治.*$|苗族自治.*$|彝族自治.*$|土家族自治.*$|藏族自治.*$|蒙古族自治.*$|侗族自治.*$|布依族自治.*$|瑶族自治.*$|白族自治.*$|朝鲜族自治.*$|哈尼族自治.*$|黎族自治.*$|哈萨克族自治.*$|傣族自治.*$|畲族自治.*$|傈僳族自治.*$|东乡族自治.*$|仡佬族自治.*$|拉祜族自治.*$|佤族自治.*$|水族自治.*$|纳西族自治.*$| 羌族自治.*$| 土族自治.*$| 仫佬族自治.*$| 锡伯族自治.*$| 柯尔克孜族自治.*$|景颇族自治.*$|达斡尔族自治.*$|撒拉族自治.*$|布朗族自治.*$|毛南族自治.*$|塔吉克族自治.*$|普米族自治.*$|阿昌族自治.*$|怒族自治.*$|鄂温克族自治.*$|京族自治.*$|基诺族自治.*$|德昂族自治.*$|保安族自治.*$|俄罗斯族自治.*$|裕固族自治.*$|乌孜别克族自治.*$|门巴族自治.*$|鄂伦春族自治.*$|独龙族自治.*$|赫哲族自治.*$|高山族自治.*$|珞巴族自治.*$|塔塔尔族自治.*$|市|区|州|县")
gsub(name_official, "", "石柱土家族自治县", perl = TRUE)
set.seed(313)
name_official <- c("壮族自治.*$|回族自治.*$|满族自治.*$|维吾尔族自治.*$|苗族自治.*$|彝族自治.*$|土家族自治.*$|藏族自治.*$|蒙古族自治.*$|侗族自治.*$|布依族自治.*$|瑶族自治.*$|白族自治.*$|朝鲜族自治.*$|哈尼族自治.*$|黎族自治.*$|哈萨克族自治.*$|傣族自治.*$|畲族自治.*$|傈僳族自治.*$|东乡族自治.*$|仡佬族自治.*$|拉祜族自治.*$|佤族自治.*$|水族自治.*$|纳西族自治.*$| 羌族自治.*$| 土族自治.*$| 仫佬族自治.*$| 锡伯族自治.*$| 柯尔克孜族自治.*$|景颇族自治.*$|达斡尔族自治.*$|撒拉族自治.*$|布朗族自治.*$|毛南族自治.*$|塔吉克族自治.*$|普米族自治.*$|阿昌族自治.*$|怒族自治.*$|鄂温克族自治.*$|京族自治.*$|基诺族自治.*$|德昂族自治.*$|保安族自治.*$|俄罗斯族自治.*$|裕固族自治.*$|乌孜别克族自治.*$|门巴族自治.*$|鄂伦春族自治.*$|独龙族自治.*$|赫哲族自治.*$|高山族自治.*$|珞巴族自治.*$|塔塔尔族自治.*$|市|区|州|县")
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2) %>%
ungroup() %>%
mutate(prefecture_sname = gsub(name_official, "", prefecture, perl = TRUE))
set.seed(313)
load("dev/corruption_data.rda")
name_official <- c("壮族自治.*$|回族自治.*$|满族自治.*$|维吾尔族自治.*$|苗族自治.*$|彝族自治.*$|土家族自治.*$|藏族自治.*$|蒙古族自治.*$|侗族自治.*$|布依族自治.*$|瑶族自治.*$|白族自治.*$|朝鲜族自治.*$|哈尼族自治.*$|黎族自治.*$|哈萨克族自治.*$|傣族自治.*$|畲族自治.*$|傈僳族自治.*$|东乡族自治.*$|仡佬族自治.*$|拉祜族自治.*$|佤族自治.*$|水族自治.*$|纳西族自治.*$|羌族自治.*$| 土族自治.*$|仫佬族自治.*$| 锡伯族自治.*$| 柯尔克孜族自治.*$|景颇族自治.*$|达斡尔族自治.*$|撒拉族自治.*$|布朗族自治.*$|毛南族自治.*$|塔吉克族自治.*$|普米族自治.*$|阿昌族自治.*$|怒族自治.*$|鄂温克族自治.*$|京族自治.*$|基诺族自治.*$|德昂族自治.*$|保安族自治.*$|俄罗斯族自治.*$|裕固族自治.*$|乌孜别克族自治.*$|门巴族自治.*$|鄂伦春族自治.*$|独龙族自治.*$|赫哲族自治.*$|高山族自治.*$|珞巴族自治.*$|塔塔尔族自治.*$|市|区|州|县")
corruption <- vignette_data %>%
group_by(province) %>%
slice_sample(n = 2) %>%
ungroup() %>%
mutate(prefecture_sname = gsub(name_official, "", prefecture, perl = TRUE))
usethis::use_data(corruption, overwrite = TRUE)
library(regioncode)
View(corruption)
load("data/region_data_all.RData")
load("data/region_data_all.rda")
load("data/region_data.rda")
load("../data/region_data.rda")
file.exists("../data/region_data.rda")
file.exists("data/region_data.rda")
getwd()
load("data/region_table.rda")
code_zhixiashi <- c("110", "120", "310", "400")
load("data/region_table.rda")
code_zhixiashi <- c("110000", "120000", "310000", "400000")
region_table <- region_table %>%
mutate(zhixiashi = prov_code %in% code_zhixiashi)
usethis::use_data(region_table, overwrite = TRUE)
data(corruption)
force(corruption)
corruption <- corruption %>%
mutate(prefecture_id = ifelse(province_id %in% code_zhixiashi, province_id, prefecture_id))
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999,
zhixiashi = TRUE)
library(regioncode)
library(regioncode)
Sys.setlocale(category = "LC_COLLATE", locale = "Chinese")
Sys.setlocale(category = "LC_CTYPE", locale = "Chinese")
Sys.setlocale(category = "LC_COLLATE", locale = "Chinese")
Sys.setlocale(category = "LC_CTYPE", locale = "Chinese")
library(regioncode)
data(corruption)
head(corruption)
# original geocodes. It's 2019 version
corruption$prefecture_id
# after conversion. It's 2005 version
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999)
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999,
method = "code2name")
corruption$prefecture
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
method = "name2code")
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
method = "name2name")
# Full, official names
corruption$prefecture
# Incomplete names
corruption$prefecture_sname
# Converting
regioncode(data_input = corruption$prefecture_sname,
year_from = 2019,
year_to = 1999,
method = "name2code",
incompleteName = "from")
# In the sample data, the division code of municipalities were coded as NA. Filling the codes of municipalities with their provinces' codes.
code_zhixiashi <- c("110000", "120000", "310000", "400000")
corruption <- corruption %>%
mutate(prefecture_id = ifelse(province_id %in% code_zhixiashi, province_id, prefecture_id))
# Converting
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999,
zhixiashi = TRUE)
`%>%`
?`%>%`
library(regioncode)
library(regioncode)
regioncode("110000")
library(regioncode)
regioncode("110000")
regioncode(110000)
?data
library(regioncode)
regioncode(110000)
Sys.which(Sys.getenv("R_QPDF", "qpdf.exe"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.setenv('PATH' = paste0('"D:\userLib\qpdf\R";', Sys.getenv('PATH')))
Sys.setenv('PATH' = paste0('D:\userLib\qpdf\R;', Sys.getenv('PATH')))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
?Sys.getenv
Sys.which(Sys.getenv("R_QPDF", "qpdf.dll"))
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
person(given = "Yue",family = "Hu",role = c("aut","cre"), email = "yuehu@tsinghua.edu.cn")
