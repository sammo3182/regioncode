year_from <- "prov_name"
year_to <- "prov_name"
c(year_from, year_to)
},
"name2abbre" = {
year_from <- "prov_name"
year_to <- paste0(year_to, "_nickname")
c(year_from, year_to)
},
"abbre2name" = {
year_from <- paste0(year_from, "_nickname")
year_to <- "prov_name"
c(year_from, year_to)
},
"abbre2code" = {
year_from <- paste0(year_from, "_nickname")
year_to <- "prov_code"
c(year_from, year_to)
}
)
} else {
# when doing prefectural level converting
if (is.numeric(data_input))
year_from <- paste0(year_from, '_code')
if (is.character(data_input))
year_from <- paste0(year_from, '_name')
ls_index <- switch(method,
"2code" = {
year_to <- paste0(year_to, '_code')
c(year_from, year_to)
},
"2name" = {
year_to <- paste0(year_to, '_name')
c(year_from, year_to)
})
# Using the Municipal codes for within region codes
if (zhixiashi) {
region_zhixiashi <- region_table %>%
filter(zhixiashi)
region_sname <- region_zhixiashi %>%
select(ends_with("_sname"))
region_name <- region_zhixiashi %>%
select(ends_with("_name"))
region_code <- region_zhixiashi %>%
select(ends_with("_code"))
# replacing the prefectural names and codes with provincial names and codes
region_sname2 <-
replicate(ncol(region_sname), region_zhixiashi$prov_name) %>%
as.data.frame()
names(region_sname2) <- names(region_sname)
region_name2 <-
replicate(ncol(region_name), region_zhixiashi$prov_name) %>%
as.data.frame()
names(region_name2) <- names(region_name)
region_code2 <-
replicate(ncol(region_code), region_zhixiashi$prov_code) %>%
as.data.frame()
names(region_code2) <- names(region_code)
region_zhixiashi <-
bind_cols(region_sname2, region_name2, region_code2)
region_zhixiashi <-
region_zhixiashi[, order(colnames(region_zhixiashi))]
region_province <- region_table %>%
filter(!zhixiashi)
region_province <-
region_province[, order(colnames(region_province))]
region_table <- bind_rows(region_zhixiashi, region_province)
}
}
# When using sname instead of the official name
ls_index <- case_when(
incompleteName == "both" ~ gsub("_name", "_sname", ls_index),
incompleteName == "from" ~ c(gsub("_name", "_sname", ls_index[1]), ls_index[2]),
incompleteName == "to" ~ c(ls_index[1], gsub("_name", "_sname", ls_index[2])),
incompleteName == "none" ~ ls_index
)
# Updating the year_from/to after the evaluation of `incompleteName`
if (incompleteName != "none") {
year_from <- ls_index[1]
year_to <- ls_index[2]
}
# Convert the input to a data.frame for later merging
df_input <- data_input %>% as.data.frame
names(df_input) <- ls_index[1]
data_output <-
select(region_table,!!ls_index) %>%
distinct() %>%
left_join(df_input, .) %>% # using left_join to keep the order of the input data
pull(!!year_to)
return(data_output)
}
regioncode("河东区", method = "2code")
regioncode <- function(data_input,
year_from = 1999,
year_to = 2015,
method = "code2code",
province = FALSE,
zhixiashi = TRUE,
incompleteName = "none") {
if (!is.character(data_input) & !is.numeric(data_input))
stop(
'Invalid input: only region names as a character vector or division codes as an integer vector are valid.'
)
if (!is.numeric(year_from))
stop("Invalid input: Converting years must be integers.")
if (province) {
if (!(
method %in% c(
'2name',
'2abbre',
'2code',
'abbre2name',
'abbre2code'
)
))
stop("Invalid input: please choose a valid converting method.")
} else {
if (!(method %in% c('2name', '2code')))
stop("Invalid input: please choose a valid converting method.")
}
if (!(incompleteName %in% c("none", "from", "to", "both")))
stop(
"Invalid input: the options of `incompleteName` are one of 'none', 'from', 'to', and 'both'."
)
if (province) {
if (method == 'code2code')
stop(
"Invalid input: there is no provincial level code converting. You may want to set the argument `province` to FALSE."
)
prov_table <- region_table %>%
select(prov_code:`1999_nickname`) %>%
distinct
year_from <- ifelse(year_from < 1999, 1998, 1999)
year_to <- ifelse(year_to < 1999, 1998, 1999)
if (is.numeric(data_input))
year_from <- "prov_code"
if (is.character(data_input))
year_from <- "prov_name"
ls_index <- switch (
method,
"2name" = {
year_to <- "prov_name"
c(year_from, year_to)
},
"2code" = {
year_to <- "prov_code"
c(year_from, year_to)
},
"2abbre" = {
year_to <- paste0(year_to, "_nickname")
c(year_from, year_to)
},
"abbre2name" = {
year_from <- paste0(year_from, "_nickname")
year_to <- "prov_name"
c(year_from, year_to)
},
"abbre2code" = {
year_from <- paste0(year_from, "_nickname")
year_to <- "prov_code"
c(year_from, year_to)
}
)
} else {
# when doing prefectural level converting
if (is.numeric(data_input))
year_from <- paste0(year_from, '_code')
if (is.character(data_input))
year_from <- paste0(year_from, '_name')
ls_index <- switch(method,
"2code" = {
year_to <- paste0(year_to, '_code')
c(year_from, year_to)
},
"2name" = {
year_to <- paste0(year_to, '_name')
c(year_from, year_to)
})
# Using the Municipal codes for within region codes
if (zhixiashi) {
region_zhixiashi <- region_table %>%
filter(zhixiashi)
region_sname <- region_zhixiashi %>%
select(ends_with("_sname"))
region_name <- region_zhixiashi %>%
select(ends_with("_name"))
region_code <- region_zhixiashi %>%
select(ends_with("_code"))
# replacing the prefectural names and codes with provincial names and codes
region_sname2 <-
replicate(ncol(region_sname), region_zhixiashi$prov_name) %>%
as.data.frame()
names(region_sname2) <- names(region_sname)
region_name2 <-
replicate(ncol(region_name), region_zhixiashi$prov_name) %>%
as.data.frame()
names(region_name2) <- names(region_name)
region_code2 <-
replicate(ncol(region_code), region_zhixiashi$prov_code) %>%
as.data.frame()
names(region_code2) <- names(region_code)
region_zhixiashi <-
bind_cols(region_sname2, region_name2, region_code2)
region_zhixiashi <-
region_zhixiashi[, order(colnames(region_zhixiashi))]
region_province <- region_table %>%
filter(!zhixiashi)
region_province <-
region_province[, order(colnames(region_province))]
region_table <- bind_rows(region_zhixiashi, region_province)
}
}
# When using sname instead of the official name
ls_index <- case_when(
incompleteName == "both" ~ gsub("_name", "_sname", ls_index),
incompleteName == "from" ~ c(gsub("_name", "_sname", ls_index[1]), ls_index[2]),
incompleteName == "to" ~ c(ls_index[1], gsub("_name", "_sname", ls_index[2])),
incompleteName == "none" ~ ls_index
)
# Updating the year_from/to after the evaluation of `incompleteName`
if (incompleteName != "none") {
year_from <- ls_index[1]
year_to <- ls_index[2]
}
# Convert the input to a data.frame for later merging
df_input <- data_input %>% as.data.frame
names(df_input) <- ls_index[1]
data_output <-
select(region_table,!!ls_index) %>%
distinct() %>%
left_join(df_input, .) %>% # using left_join to keep the order of the input data
pull(!!year_to)
return(data_output)
}
regioncode("河东区", method = "2code")
regioncode("常德市", method = "2code")
regioncode("河东区", method = "2code", zhixiashi = FALSe)
regioncode("河东区", method = "2code", zhixiashi = FALSE)
regioncode("120102", method = "2name", zhixiashi = FALSE)
regioncode(120102, method = "2name", zhixiashi = FALSE)
library(regioncode)
library(regioncode)
regioncode(64000)
regioncode(640000)
regioncode(140000)
Sys.setlocale(category = "LC_COLLATE", locale = "Chinese")
Sys.setlocale(category = "LC_CTYPE", locale = "Chinese")
load("R/sysdata.rda")
library(dplyr)
year_from = 1999
year_to = 2015
method = "code2code"
province = FALSE
zhixiashi = TRUE
incompleteName = "none"
View(region_table)
library(devtools)
devtools::build()
library(rstyle)
library(styler)
install.packages('styler')
styler:::set_style_transformers()
styler::style_pkg()
styler::style_pkg()
year_to = 1999)
styler::style_pkg()
styler:::set_style_transformers()
styler:::style_selection()
styler:::style_active_file()
styler::style_pkg()
styler::style_pkg()
styler:::style_active_file()
styler:::style_selection()
devtools::load_all()
devtools::run_examples()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
load('./R/sysdata.rad')
load('./R/sysdata.rda')
load('./data/corruption_data.rda')
corruption <- vignette_data
rm(vignette_data)
usethis::use_data(region_table, corruption)
usethis::use_data(region_table, corruption, internal = TRUE)
usethis::use_data(region_table, corruption, internal = TRUE, overwrite = TRUE)
load('./R/sysdata.rda')
devtools::document()
devtools::load_all()
devtools::run_examples()
devtools::load_all()
devtools::load_all()
devtools::run_examples()
devtools::document()
devtools::build()
usethis::use_version()
usethis::use_version()
devtools::check()
usethis::use_pkgdown()
pkgdown::build_site()
devtools::document()
devtools::document()
devtools::run_examples()
devtools::document()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
usethis::use_readme_rmd()
devtools::document()
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_readme_rmd()
usethis::use_news_md()
devtools::build()
getwd()
getwd()install.packages("C:/Users/mi/Documents/GitHub/regioncode_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/mi/Documents/GitHub/regioncode_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/mi/Documents/GitHub/regioncode_0.1.0.tar.gz", repos = NULL, type = "source")
regioncode(data_input = corruption$prefecture_id,
year_from = 2000,
year_to = 2015)
library(regioncode)
regioncode(data_input = corruption$prefecture_id,
year_from = 2000,
year_to = 2015)
regioncode(data_input = corruptions$prefecture_id,
year_from = 2000,
year_to = 2015)
regioncode(
year_from = 2000,
year_to = 2015)
regioncode(data_input = corruptions$prefecture_id,
year_from = 2000,
year_to = 2015)
regioncode(data_input = corruption$prefecture_id,
year_from = 2000,
year_to = 2015)
load("~/GitHub/regioncode/R/sysdata.rda")
regioncode(data_input = corruption$prefecture_id,
year_from = 2000,
year_to = 2015)
regioncode(data_input = corruption$prefecture_id,
year_from = 2000,
year_to = 2015,)
regioncode(data_input = corruption$prefecture_id,
year_from = 2000,
year_to = 2015,method = '2name')
regioncode(data_input = corruption$prefecture_id,
year_from = 2000,
year_to = 2015,method = '2name', topinyin =TRUE)
detach("package:regioncode", unload = TRUE)
remove.packages("regioncode", lib="~/R/win-library/4.1")
devtools::use_data(corruption, region_table, internal = TRUE)
devtools::document()
devtools::use_data(corruption, region_table, internal = TRUE)
devtools::use_data(corruption, region_table, internal = TRUE)
devtools::check()
devtools::check()
devtools::load_all()
devtools::run_examples()
devtools::document()
devtools::use_data(corruption, region_table, internal = TRUE)
?devtools::use_data()
usethis::use_data(corruption, region_table, internal = TRUE)
usethis::use_data(corruption, region_table, internal = TRUE)
devtools::build()
load("~/GitHub/regioncode/R/sysdata.rda")
usethis::use_data(corruption)
devtools::build()
library(regioncode)
remove.packages("regioncode", lib="~/R/win-library/4.1")
?devtools::build()
devtools::build(binary = TRUE)
devtools::build(binary = TRUE)
devtools::build(binary = TRUE)
devtools::build(binary = FALSE)
library(regioncode)
remove.packages("regioncode", lib="~/R/win-library/4.1")
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
Sys.setlocale(category = "LC_COLLATE", locale = "Chinese")
Sys.setlocale(category = "LC_CTYPE", locale = "Chinese")
library(regioncode)
corruption
library(regioncode)
corruption[1:20]
library(regioncode)
corruption[1:20,]
head(na.exclude(corruption))
corruption <- na.exclude(corruption)
head(corruption)
# original geocodes. It's 2019 version
corruption$prefecture_id
# after conversion. It's 1999 version
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999)
corruption <- na.exclude(corruption)[:10,]
head(corruption)
corruption
corruption <- sample(na.exclude(corruption),10)
corruption
library(regioncode)
corruption <- sample(na.exclude(corruption),10)
corruption
?sample
library(regioncode)
corruption <- sample(na.exclude(corruption),10)
corruption <- sample(na.exclude(corruption),10)
library(regioncode)
corruption <- sample_n(na.exclude(corruption), 10)
library(regioncode)
corruption <- sample_n(na.exclude(corruption), 10)
library(dplyr)
corruption <- sample_n(na.exclude(corruption), 10)
corruption
# original geocodes. It's 2019 version
corruption$prefecture_id
# after conversion. It's 1999 version
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999)
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999,
method = "2name")
corruption$prefecture
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
method = "2code")
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
method = "2name")
# Full, official names
corruption$prefecture
# Incomplete names
corruption$prefecture_sname
# Converting
regioncode(data_input = corruption$prefecture_sname,
year_from = 2019,
year_to = 1999,
method = "2code",
incompleteName = "from")
# In the sample data, the division code of municipalities were coded as NA. Filling the codes of municipalities with their provinces' codes.
code_zhixiashi <- c("110000", "120000", "310000", "400000")
corruption <- corruption %>%
mutate(prefecture_id = ifelse(province_id %in% code_zhixiashi, province_id, prefecture_id))
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999,
zhixiashi = TRUE)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
province = F,
method="2area")
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
province = F,
method="2area",
topinyin=FALSE
)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
province = F,
method="2area",
topinyin=FALSE
)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
province = F,
method="2area",
topinyin=TRUE
)
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
province = F,
todialect = "dia_group")
```{r 2area, echo=TRUE, warning= FALSE, message=FALSE}
regioncode(data_input = corruption$prefecture,
year_from = 2019,
year_to = 1999,
province = F,
method="2area")
```{r zhixiashi, echo=TRUE, warning= FALSE, message=FALSE}
# In the sample data, the division code of municipalities were coded as NA. Filling the codes of municipalities with their provinces' codes.
code_zhixiashi <- c("110000", "120000", "310000", "400000")
corruption <- corruption %>%
mutate(prefecture_id = ifelse(province_id %in% code_zhixiashi, province_id, prefecture_id))
regioncode(data_input = corruption$prefecture_id,
year_from = 2019,
year_to = 1999,
zhixiashi = TRUE)
# Full, official names
corruption$prefecture
# Incomplete names
corruption$prefecture_sname
View(corruption)
View(corruption)
# Incomplete names
corruption$prefecture_sname <- gsub('.{1}$', '', corruption$prefecture)
corruption$prefecture_sname
# Converting
regioncode(data_input = corruption$prefecture_sname,
year_from = 2019,
year_to = 1999,
method = "2code",
incompleteName = "from")
devtools::build()
devtools::build()
devtools::build()
